"""
–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å ChatGPT API –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å—Ç–æ–≤
"""

import openai
import re
import logging
from typing import Dict, Optional, List
from config import config
import asyncio

logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OpenAI
client = None
if config.OPENAI_API_KEY:
    client = openai.OpenAI(api_key="sk-...")



class ChatGPTRewriter:
    """–ö–ª–∞—Å—Å –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å ChatGPT API"""
    
    def __init__(self):
        self.channel_style = {
            "theme": "TON/Telegram/–ö—Ä–∏–ø—Ç–∞",
            "tone": "–î–µ—Ä–∑–∫–∏–π, –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–æ–Ω–Ω—ã–π, —Å –∏—Ä–æ–Ω–∏–µ–π",
            "audience": "–ö—Ä–∏–ø—Ç–æ-—ç–Ω—Ç—É–∑–∏–∞—Å—Ç—ã, —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏, –∏–Ω–≤–µ—Å—Ç–æ—Ä—ã",
            "length": "200-400 —Å–∏–º–≤–æ–ª–æ–≤, –Ω–æ –µ—Å–ª–∏ –ø–æ—Å—Ç –Ω—É–∂–µ–Ω –±–æ–ª–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π –∏ —Å –¥–µ—Ç–∞–ª—è–º–∏, —Ç–æ –º–æ–∂–Ω–æ –∏ –±–æ–ª—å—à–µ",
            "emoji": "1-3 —ç–º–æ–¥–∑–∏ –¥–ª—è –∞–∫—Ü–µ–Ω—Ç–æ–≤",
            "style": "–§–∞–∫—Ç—ã + –º–Ω–µ–Ω–∏–µ + —Å–∞—Ä–∫–∞–∑–º"
        }
        
        self.base_prompt = """–¢—ã ‚Äî —Ä–µ–¥–∞–∫—Ç–æ—Ä –¥–µ—Ä–∑–∫–æ–≥–æ –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ Telegram-–∫–∞–Ω–∞–ª–∞ –ø—Ä–æ TON, Telegram Gifts –∏ –∫—Ä–∏–ø—Ç—É.
–ü–∏—à–∏ –ø–æ—Å—Ç—ã –≤ —Å—Ç–∏–ª–µ: —Ñ–∞–∫—Ç—ã + –º–Ω–µ–Ω–∏–µ + –ª—ë–≥–∫–∏–π —Å–∞—Ä–∫–∞–∑–º + —Ü–µ–ø–ª—è—é—â–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫.

–°—Ç—Ä—É–∫—Ç—É—Ä–∞:
1. –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å —ç–º–æ—Ü–∏–µ–π –∏–ª–∏ —Ü–µ–ø–∫–æ–π —Ñ—Ä–∞–∑–æ–π (—ç–º–æ–¥–∑–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—Ç—Å—è)
2. –°—É—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –≤ 2‚Äì4 –∫–æ—Ä–æ—Ç–∫–∏—Ö –∞–±–∑–∞—Ü–∞—Ö
3. –õ–∏—á–Ω—ã–π –≤—ã–≤–æ–¥, –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–≤–æ–∫–∞—Ü–∏—è –¥–ª—è –≤–æ–≤–ª–µ—á–µ–Ω–∏—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏

–°—Ç–∏–ª—å:
‚Ä¢ –ö–æ—Ä–æ—Ç–∫–∏–µ –∞–±–∑–∞—Ü—ã (1‚Äì3 —Å—Ç—Ä–æ–∫–∏)
‚Ä¢ –î–µ—Ä–∑–∫–∞—è –ø–æ–¥–∞—á–∞, –∏—Ä–æ–Ω–∏—è, –∏–Ω–æ–≥–¥–∞ —Å–ª–µ–≥–∫–∞ –≥—Ä—É–±–æ–≤–∞—Ç—ã–µ —Å–ª–æ–≤–∞, –Ω–æ –±–µ–∑ –ø–µ—Ä–µ–≥–∏–±–∞
‚Ä¢ 1‚Äì3 —ç–º–æ–¥–∑–∏ –¥–ª—è –∞–∫—Ü–µ–Ω—Ç–æ–≤
‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç: –Ω–∏–∫–∞–∫–∏—Ö —à–∞–±–ª–æ–Ω–æ–≤, –∫–∞–Ω—Ü–µ–ª—è—Ä–∏—Ç–∞ –∏ —Å—É—Ö–∏—Ö –ø–µ—Ä–µ—Å–∫–∞–∑–æ–≤

–ü—Ä–∏–º–µ—Ä—ã –ø–æ—Å—Ç–æ–≤:
‚Ä¢ ¬´ü§® OHUENKO Chat –í –° –ï! –°–æ–æ–±—â–µ–Ω–∏—è —Ç–µ–ø–µ—Ä—å —Ç–æ–ª—å–∫–æ –∑–∞ 10 000 –∑–≤—ë–∑–¥ ‚Äî –ø–æ—á—Ç–∏ $150 –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ó–∞—Ç–∏—à—å–µ –ø–µ—Ä–µ–¥ –±—É—Ä–µ–π –∏–ª–∏ –Ω–æ–≤—ã–π —Ä–µ–ª–∏–∑?¬ª
‚Ä¢ ¬´‚úàÔ∏è Telegram —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥ –ø—Ä–æ—Ñ–∏–ª—è: —á–µ–º –±–æ–ª—å—à–µ –∑–≤—ë–∑–¥ –∫—É–ø–∏–ª ‚Äî —Ç–µ–º –≤—ã—à–µ —É—Ä–æ–≤–µ–Ω—å. –°–æ—Ü–∏–µ—Ä–∞—Ä—Ö–∏—è –≤–Ω—É—Ç—Ä–∏ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞? –ù–µ –ø–æ—Ö–æ–∂–µ –ª–∏ —ç—Ç–æ –Ω–∞ —Å—Ç–∞—Ä—ã–π –í–ö?¬ª
‚Ä¢ ¬´‚ùÑÔ∏è –ö—Ä–∏–ø—Ç–æ–∑–∏–º–∞ –Ω–∞—á–∞–ª–∞—Å—å: –¢—Ä–∞–º–ø –ø–æ–¥–ø–∏—Å–∞–ª –∑–∞–∫–æ–Ω GENIUS ‚Äî —Ç–µ–ø–µ—Ä—å —Å—Ç–µ–π–±–ª–∫–æ–∏–Ω—ã –ø–æ–¥ –∂—ë—Å—Ç–∫–∏–º –Ω–∞–¥–∑–æ—Ä–æ–º. –°–≤–æ–±–æ–¥—ã —Å—Ç–∞–ª–æ –º–µ–Ω—å—à–µ.¬ª
‚Ä¢ ¬´üé≠ –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–æ —Å—Ç–∏–∫–µ—Ä–∞–º–∏? –í—Å–µ –∂–¥—É—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é, –Ω–æ –ø–æ–∫–∞ —ç—Ç–æ —Ç–æ–ª—å–∫–æ —Å–ª–æ–≤–∞. Telegram –º–æ–ª—á–∏—Ç ‚Äî –∑–Ω–∞—á–∏—Ç, –Ω–µ –≤—Ä–µ–º—è.¬ª
‚Ä¢ ¬´üíé TON –≤–æ—Ä–≤–∞–ª—Å—è –≤ —Ç–æ–ø non-EVM-—Å–µ—Ç–µ–π: FDV $16,8 –º–ª—Ä–¥. TON –ø–æ $10 ‚Äî –≤—Å—ë –µ—â—ë –º–∏—Ñ?¬ª
‚Ä¢ ¬´üî• –°–∞–º—ã–π –¥–æ—Ä–æ–≥–æ–π Telegram-–ø–æ–¥–∞—Ä–æ–∫ –≤ –∏—Å—Ç–æ—Ä–∏–∏! Plush Pepe Cozy Galaxy —É—à—ë–ª —Å –∞—É–∫—Ü–∏–æ–Ω–∞ –∑–∞ $96 000.¬ª

–í–ê–ñ–ù–û:
‚Ä¢ –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π —Å—Å—ã–ª–∫–∏ –∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è
‚Ä¢ –ù–ï –¥–æ–±–∞–≤–ª—è–π —Ö–µ—à—Ç–µ–≥–∏
‚Ä¢ –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π markdown-—Ä–∞–∑–º–µ—Ç–∫—É
‚Ä¢ –ü–∏—à–∏ –∂–∏–≤—ã–º —è–∑—ã–∫–æ–º
‚Ä¢ –î–æ–±–∞–≤–ª—è–π –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–æ–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π –∏—Ä–æ–Ω–∏—é –∏ —Å–∞—Ä–∫–∞–∑–º

–ü–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–∏–π –ø–æ—Å—Ç –≤ —ç—Ç–æ–º —Å—Ç–∏–ª–µ:"""

    def clean_source_text(self, text: str) -> str:
        """–¢—â–∞—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤ ChatGPT"""
        
        # –£–±–∏—Ä–∞–µ–º Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        text = re.sub(r'\*{1,3}([^*]+)\*{1,3}', r'\1', text)  # *text*, **text**, ***text***
        text = re.sub(r'_{1,3}([^_]+)_{1,3}', r'\1', text)    # _text_, __text__, ___text___
        text = re.sub(r'`{1,3}([^`]+)`{1,3}', r'\1', text)     # `code`
        
        # –£–±–∏—Ä–∞–µ–º –≤—Å–µ —Å—Å—ã–ª–∫–∏ –∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è
        text = re.sub(r'\[([^\]]+)\]\([^)]*\)', r'\1', text)   # [text](link)
        text = re.sub(r'https?://[^\s]+', '', text)           # –æ–±—ã—á–Ω—ã–µ —Å—Å—ã–ª–∫–∏
        text = re.sub(r't\.me/[^\s]+', '', text)              # t.me —Å—Å—ã–ª–∫–∏
        text = re.sub(r'@\w+', '', text)                      # @—É–ø–æ–º–∏–Ω–∞–Ω–∏—è
        text = re.sub(r'#\w+', '', text)                      # #—Ö–µ—à—Ç–µ–≥–∏
        
        # –£–±–∏—Ä–∞–µ–º —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã –∏ –º—É—Å–æ—Ä
        text = re.sub(r'[‚ñ™‚ñ´‚óæ‚óΩ‚ñ∏‚ñπ‚óÇ‚óÉ‚ñ¥‚ñµ‚ñæ‚ñø‚ñ∫‚óÑ‚ñ≤‚ñº‚ô¶‚ôß‚ô†‚ô£‚ô•‚ô§‚ô°‚ô¢]', '', text)  # –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã
        text = re.sub(r'[‚ûñ‚ûï‚ûó‚úñÔ∏è‚úîÔ∏è‚ùå‚ùó‚ùì‚ö†Ô∏èüî•]', '', text)         # —Å–ª—É–∂–µ–±–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
        text = re.sub(r'[‚îå‚îê‚îî‚îò‚îú‚î§‚î¨‚î¥‚îº‚îÄ‚îÇ]', '', text)              # —Ä–∞–º–∫–∏
        text = re.sub(r'[‚Ä¢¬∑‚Ä£‚ÅÉ]', '', text)                     # —Å–ø–∏—Å–∫–∏
        
        # –£–±–∏—Ä–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã –∏ –ø–µ—Ä–µ–Ω–æ—Å—ã
        text = re.sub(r'\s{2,}', ' ', text)
        text = re.sub(r'\n{2,}', '\n', text)
        
        # –£–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã –≤ –Ω–∞—á–∞–ª–µ/–∫–æ–Ω—Ü–µ
        lines = [line.strip() for line in text.split('\n') if line.strip()]
        text = '\n'.join(lines)
        
        # –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
        text = re.sub(r'^[^\w\d]+|[^\w\d.,!?]+$', '', text.strip())
        
        return text.strip()

    def get_copyable_prompt(self, original_text: str, content_type: str = "news") -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≥–æ—Ç–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è copy-paste –≤ ChatGPT"""
        
        # –°–Ω–∞—á–∞–ª–∞ –æ—á–∏—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
        cleaned_text = self.clean_source_text(original_text)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å –¥–ª—è —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        type_specific = {
            "news": "üóû –ù–û–í–û–°–¢–¨: –°–¥–µ–ª–∞–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å —ç–º–æ—Ü–∏–µ–π + –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–æ–Ω–Ω—ã–π –≤—ã–≤–æ–¥",
            "update": "üîÑ –û–ë–ù–û–í–õ–ï–ù–ò–ï: –ü–æ–¥—á–µ—Ä–∫–Ω–∏ –≤–∞–∂–Ω–æ—Å—Ç—å + –¥–æ–±–∞–≤—å –∏—Ä–æ–Ω–∏—é –æ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞—Ö", 
            "airdrop": "üéÅ AIRDROP: –°–æ–∑–¥–∞–π –æ—â—É—â–µ–Ω–∏–µ FOMO + –Ω–∞–º–µ–∫–Ω–∏ –Ω–∞ –ø–æ–¥–≤–æ–¥–Ω—ã–µ –∫–∞–º–Ω–∏",
            "analysis": "üìä –ê–ù–ê–õ–ò–¢–ò–ö–ê: –î–æ–±–∞–≤—å —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —Å–∞—Ä–∫–∞–∑–º + –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –≤—ã–≤–æ–¥"
        }
        
        specific_instruction = type_specific.get(content_type, type_specific["news"])
        
        copyable_prompt = f"""–¢—ã ‚Äî —Ä–µ–¥–∞–∫—Ç–æ—Ä –¥–µ—Ä–∑–∫–æ–≥–æ –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ Telegram-–∫–∞–Ω–∞–ª–∞ –ø—Ä–æ TON, Telegram Gifts –∏ –∫—Ä–∏–ø—Ç—É.
–ü–∏—à–∏ –ø–æ—Å—Ç—ã –≤ —Å—Ç–∏–ª–µ: —Ñ–∞–∫—Ç—ã + –º–Ω–µ–Ω–∏–µ + –ª—ë–≥–∫–∏–π —Å–∞—Ä–∫–∞–∑–º + —Ü–µ–ø–ª—è—é—â–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫.

–°–¢–†–£–ö–¢–£–†–ê:
1. –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å —ç–º–æ—Ü–∏–µ–π –∏–ª–∏ —Ü–µ–ø–∫–æ–π —Ñ—Ä–∞–∑–æ–π (—ç–º–æ–¥–∑–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—Ç—Å—è)
2. –°—É—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –≤ 2‚Äì4 –∫–æ—Ä–æ—Ç–∫–∏—Ö –∞–±–∑–∞—Ü–∞—Ö
3. –õ–∏—á–Ω—ã–π –≤—ã–≤–æ–¥, –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–≤–æ–∫–∞—Ü–∏—è –¥–ª—è –≤–æ–≤–ª–µ—á–µ–Ω–∏—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏

–°–¢–ò–õ–¨:
‚Ä¢ –ö–æ—Ä–æ—Ç–∫–∏–µ –∞–±–∑–∞—Ü—ã (1‚Äì3 —Å—Ç—Ä–æ–∫–∏)
‚Ä¢ –î–µ—Ä–∑–∫–∞—è –ø–æ–¥–∞—á–∞, –∏—Ä–æ–Ω–∏—è, –∏–Ω–æ–≥–¥–∞ —Å–ª–µ–≥–∫–∞ –≥—Ä—É–±–æ–≤–∞—Ç—ã–µ —Å–ª–æ–≤–∞
‚Ä¢ 1‚Äì3 —ç–º–æ–¥–∑–∏ –¥–ª—è –∞–∫—Ü–µ–Ω—Ç–æ–≤
‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –±–µ–∑ —à–∞–±–ª–æ–Ω–æ–≤ –∏ –∫–∞–Ω—Ü–µ–ª—è—Ä–∏—Ç–∞

–°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –ò–ù–°–¢–†–£–ö–¶–ò–Ø: {specific_instruction}

–ò–°–•–û–î–ù–´–ô –¢–ï–ö–°–¢:
{cleaned_text}

–ù–∞–ø–∏—à–∏ –¥–µ—Ä–∑–∫–∏–π –ø–æ—Å—Ç –¥–ª—è Telegram-–∫–∞–Ω–∞–ª–∞ –≤ –æ–ø–∏—Å–∞–Ω–Ω–æ–º —Å—Ç–∏–ª–µ:"""

        return copyable_prompt
    
    def get_rewrite_suggestions(self, original_text: str) -> Dict[str, str]:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–≤–µ—Ç—ã —á—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä–æ–≤–∞—Ç—å"""
        
        suggestions = {}
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
        if len(original_text) < 100:
            suggestions["length"] = "üìè –¢–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π - –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –¥–µ—Ç–∞–ª–∏"
        
        if "http" in original_text or "t.me" in original_text:
            suggestions["links"] = "üîó –£–±—Ä–∞—Ç—å –≤—Å–µ —Å—Å—ã–ª–∫–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞"
        
        if "@" in original_text:
            suggestions["mentions"] = "üë§ –£–±—Ä–∞—Ç—å —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (@username)"
        
        if "#" in original_text:
            suggestions["hashtags"] = "üè∑Ô∏è –£–±—Ä–∞—Ç—å —Ö–µ—à—Ç–µ–≥–∏"
        
        if original_text.count("(") > 2 or original_text.count("[") > 1:
            suggestions["brackets"] = "üìù –£–±—Ä–∞—Ç—å –ª–∏—à–Ω–∏–µ —Å–∫–æ–±–∫–∏ –∏ —É–ø—Ä–æ—Å—Ç–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
        boring_words = ["—Å–æ–æ–±—â–∞–µ—Ç", "–æ–±—ä—è–≤–ª—è–µ—Ç", "–∑–∞—è–≤–ª—è–µ—Ç", "–∏–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç"]
        if any(word in original_text.lower() for word in boring_words):
            suggestions["tone"] = "üé≠ –°–¥–µ–ª–∞—Ç—å —Ç–µ–∫—Å—Ç –±–æ–ª–µ–µ —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–º –∏ –º–µ–Ω–µ–µ —Ñ–æ—Ä–º–∞–ª—å–Ω—ã–º"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º emoji
        if not any(char for char in original_text if ord(char) > 127):
            suggestions["emoji"] = "‚ú® –î–æ–±–∞–≤–∏—Ç—å 2-3 —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö emoji –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –≤–Ω–∏–º–∞–Ω–∏—è"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        if "." not in original_text or original_text.count(".") < 2:
            suggestions["structure"] = "üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π"
        
        return suggestions
    
    async def rewrite_with_chatgpt(self, original_text: str, content_type: str = "auto") -> Optional[str]:
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ ChatGPT API"""
        
        if not client:
            logger.warning("OpenAI API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return None
        
        try:
            # –°–Ω–∞—á–∞–ª–∞ –æ—á–∏—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
            cleaned_text = self.clean_source_text(original_text)
            logger.info(f"–û—á–∏—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: {cleaned_text[:100]}...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ —á—Ç–æ-—Ç–æ –æ—Å—Ç–∞–ª–æ—Å—å
            if len(cleaned_text.strip()) < 10:
                logger.warning("–ü–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–∫—Å—Ç —Å—Ç–∞–ª —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–º")
                return None
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω
            if content_type == "auto":
                content_type = self._detect_content_type(cleaned_text)
            
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            system_prompt = """–¢—ã ‚Äî —Ä–µ–¥–∞–∫—Ç–æ—Ä –¥–µ—Ä–∑–∫–æ–≥–æ –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ Telegram-–∫–∞–Ω–∞–ª–∞ –ø—Ä–æ TON, Telegram Gifts –∏ –∫—Ä–∏–ø—Ç—É.
–ü–∏—à–∏ –ø–æ—Å—Ç—ã –≤ —Å—Ç–∏–ª–µ: —Ñ–∞–∫—Ç—ã + –º–Ω–µ–Ω–∏–µ + –ª—ë–≥–∫–∏–π —Å–∞—Ä–∫–∞–∑–º + —Ü–µ–ø–ª—è—é—â–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫.

–°–¢–†–£–ö–¢–£–†–ê:
1. –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å —ç–º–æ—Ü–∏–µ–π –∏–ª–∏ —Ü–µ–ø–∫–æ–π —Ñ—Ä–∞–∑–æ–π (—ç–º–æ–¥–∑–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—Ç—Å—è)
2. –°—É—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –≤ 2‚Äì4 –∫–æ—Ä–æ—Ç–∫–∏—Ö –∞–±–∑–∞—Ü–∞—Ö
3. –õ–∏—á–Ω—ã–π –≤—ã–≤–æ–¥, –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–≤–æ–∫–∞—Ü–∏—è –¥–ª—è –≤–æ–≤–ª–µ—á–µ–Ω–∏—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏

–°–¢–ò–õ–¨:
‚Ä¢ –ö–æ—Ä–æ—Ç–∫–∏–µ –∞–±–∑–∞—Ü—ã (1‚Äì3 —Å—Ç—Ä–æ–∫–∏)
‚Ä¢ –î–µ—Ä–∑–∫–∞—è –ø–æ–¥–∞—á–∞, –∏—Ä–æ–Ω–∏—è, –∏–Ω–æ–≥–¥–∞ —Å–ª–µ–≥–∫–∞ –≥—Ä—É–±–æ–≤–∞—Ç—ã–µ —Å–ª–æ–≤–∞
‚Ä¢ 1‚Äì3 —ç–º–æ–¥–∑–∏ –¥–ª—è –∞–∫—Ü–µ–Ω—Ç–æ–≤
‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –±–µ–∑ —à–∞–±–ª–æ–Ω–æ–≤ –∏ –∫–∞–Ω—Ü–µ–ª—è—Ä–∏—Ç–∞
‚Ä¢ –ï—Å–ª–∏ –Ω–æ–≤–æ—Å—Ç—å –≤–∞–∂–Ω–∞—è - –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ

–í–ê–ñ–ù–û:
‚Ä¢ –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π —Å—Å—ã–ª–∫–∏ –∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è
‚Ä¢ –ù–ï –¥–æ–±–∞–≤–ª—è–π —Ö–µ—à—Ç–µ–≥–∏
‚Ä¢ –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π markdown-—Ä–∞–∑–º–µ—Ç–∫—É
‚Ä¢ –ü–∏—à–∏ –∂–∏–≤—ã–º —è–∑—ã–∫–æ–º
‚Ä¢ –î–æ–±–∞–≤–ª—è–π –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–æ–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π –∏—Ä–æ–Ω–∏—é –∏ —Å–∞—Ä–∫–∞–∑–º"""

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ —Ç–∏–ø—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            type_instructions = {
                "news": "üóû –°–¥–µ–ª–∞–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å —ç–º–æ—Ü–∏–µ–π + –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–æ–Ω–Ω—ã–π –≤—ã–≤–æ–¥",
                "update": "üîÑ –ü–æ–¥—á–µ—Ä–∫–Ω–∏ –≤–∞–∂–Ω–æ—Å—Ç—å + –¥–æ–±–∞–≤—å –∏—Ä–æ–Ω–∏—é –æ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞—Ö", 
                "airdrop": "üéÅ –°–æ–∑–¥–∞–π –æ—â—É—â–µ–Ω–∏–µ FOMO + –Ω–∞–º–µ–∫–Ω–∏ –Ω–∞ –ø–æ–¥–≤–æ–¥–Ω—ã–µ –∫–∞–º–Ω–∏",
                "analysis": "üìä –î–æ–±–∞–≤—å —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —Å–∞—Ä–∫–∞–∑–º + –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –≤—ã–≤–æ–¥"
            }
            
            instruction = type_instructions.get(content_type, type_instructions["news"])
            
            user_prompt = f"""–°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –ò–ù–°–¢–†–£–ö–¶–ò–Ø: {instruction}

–ò–°–•–û–î–ù–´–ô –¢–ï–ö–°–¢:
{cleaned_text}

–ù–∞–ø–∏—à–∏ –¥–µ—Ä–∑–∫–∏–π –ø–æ—Å—Ç –¥–ª—è Telegram-–∫–∞–Ω–∞–ª–∞ –≤ –æ–ø–∏—Å–∞–Ω–Ω–æ–º —Å—Ç–∏–ª–µ:"""
            
            # –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≤—ã–∑–æ–≤ –≤ asyncio.to_thread
            response = await asyncio.to_thread(
                client.chat.completions.create,
                model="gpt-3.5-turbo",
                messages=[
                    {
                        "role": "system", 
                        "content": system_prompt
                    },
                    {
                        "role": "user",
                        "content": user_prompt
                    }
                ],
                max_tokens=800,  # –£–≤–µ–ª–∏—á–∏–ª–∏ –¥–ª—è –±–æ–ª–µ–µ –¥–ª–∏–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤
                temperature=0.7,  # –ß—É—Ç—å –±–æ–ª—å—à–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏
                top_p=0.9,
                frequency_penalty=0.3,
                presence_penalty=0.2
            )
            
            if response.choices:
                rewritten_text = response.choices[0].message.content.strip()
                
                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                cleaned_text = self._clean_chatgpt_output(rewritten_text)
                
                logger.info(f"ChatGPT —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä–æ–≤–∞–ª —Ç–µ–∫—Å—Ç: {len(original_text)} -> {len(cleaned_text)} —Å–∏–º–≤–æ–ª–æ–≤")
                return cleaned_text
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ ChatGPT API: {e}")
            return None
        
        return None
        
    def _detect_content_type(self, text: str) -> str:
        """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
        text_lower = text.lower()
        
        airdrop_keywords = ['airdrop', '—Ä–∞–∑–¥–∞—á–∞', '–ø–æ–¥–∞—Ä–æ–∫', 'gifts', '–±–µ—Å–ø–ª–∞—Ç–Ω–æ', '—Ç–æ–∫–µ–Ω', 'drop']
        if any(keyword in text_lower for keyword in airdrop_keywords):
            return "airdrop"
        
        update_keywords = ['–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ', 'update', '—Ä–µ–ª–∏–∑', '–≤–µ—Ä—Å–∏—è', 'upgrade', '—É–ª—É—á—à–µ–Ω–∏–µ']
        if any(keyword in text_lower for keyword in update_keywords):
            return "update"
        
        analysis_keywords = ['–∞–Ω–∞–ª–∏–∑', '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'chart', '–≥—Ä–∞—Ñ–∏–∫', '–¥–∞–Ω–Ω—ã–µ', '–∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ']
        if any(keyword in text_lower for keyword in analysis_keywords):
            return "analysis"
        
        return "news"
    
    def _clean_chatgpt_output(self, text: str) -> str:
        """–¢—â–∞—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ—Ç –≤—ã–≤–æ–¥ ChatGPT –æ—Ç –º—É—Å–æ—Ä–∞ –∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤"""
        
        # –£–±–∏—Ä–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã ChatGPT
        text = re.sub(r'^(–ü–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç:|–ì–æ—Ç–æ–≤—ã–π –ø–æ—Å—Ç:|–†–µ–∑—É–ª—å—Ç–∞—Ç:|–í–æ—Ç –ø–µ—Ä–µ–ø–∏—Å–∞–Ω–Ω—ã–π –ø–æ—Å—Ç:|–ò—Ç–æ–≥–æ–≤—ã–π –ø–æ—Å—Ç:)', '', text, flags=re.IGNORECASE).strip()
        text = re.sub(r'^[\"\']|[\"\']$', '', text).strip()  # –£–±–∏—Ä–∞–µ–º –∫–∞–≤—ã—á–∫–∏ –≤ –Ω–∞—á–∞–ª–µ/–∫–æ–Ω—Ü–µ
        
        # –ö–†–ò–¢–ò–ß–ù–û: –£–±–∏—Ä–∞–µ–º –≤—Å–µ –±–∏—Ç—ã–µ —Å—Å—ã–ª–∫–∏ –∏ Markdown
        text = re.sub(r'\[([^\]]*)\]\([^)]*\)', r'\1', text)   # [text](link) -> text
        text = re.sub(r'\*{1,3}([^*]*)\*{1,3}', r'\1', text)  # **text** -> text
        text = re.sub(r'_{1,3}([^_]*)_{1,3}', r'\1', text)    # __text__ -> text
        text = re.sub(r'`([^`]*)`', r'\1', text)              # `code` -> code
        
        # –£–±–∏—Ä–∞–µ–º –ª—é–±—ã–µ URL –∏ –±–∏—Ç—ã–µ —Å—Å—ã–ª–∫–∏
        text = re.sub(r'https?://[^\s]*', '', text)
        text = re.sub(r't\.me/[^\s]*', '', text)
        text = re.sub(r'@\w+', '', text)
        
        # –£–±–∏—Ä–∞–µ–º —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã –∏ –º—É—Å–æ—Ä –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥–ª–∏ –ø—Ä–æ—Å–∫–æ—á–∏—Ç—å
        text = re.sub(r'[‚ñ™‚ñ´‚óæ‚óΩ‚ñ∏‚ñπ‚óÇ‚óÉ‚ñ¥‚ñµ‚ñæ‚ñø‚ñ∫‚óÑ‚ñ≤‚ñº‚ô¶‚ôß‚ô†‚ô£‚ô•‚ô§‚ô°‚ô¢]', '', text)
        text = re.sub(r'[‚ûñ‚ûï‚ûó‚úñÔ∏è‚úîÔ∏è‚ùå‚ùó‚ùì‚ö†Ô∏è]', '', text)
        text = re.sub(r'[‚îå‚îê‚îî‚îò‚îú‚î§‚î¨‚î¥‚îº‚îÄ‚îÇ]', '', text)
        text = re.sub(r'[|]', '', text)  # –£–±–∏—Ä–∞–µ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ —á–µ—Ä—Ç—ã
        
        # –£–±–∏—Ä–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã –∏ –ø–µ—Ä–µ–Ω–æ—Å—ã
        text = re.sub(r' {2,}', ' ', text)
        text = re.sub(r'\n{3,}', '\n\n', text)
        
        # –£–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º
        lines = [line.strip() for line in text.split('\n') if line.strip()]
        text = '\n'.join(lines)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –º—É—Å–æ—Ä–∞
        if len(text) < 50:
            raise ValueError("–ü–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –±–∏—Ç—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        problematic_patterns = [r'\[\s*\]', r'\(\s*\)', r'\*{2,}', r'_{2,}', r'http', r't\.me']
        for pattern in problematic_patterns:
            if re.search(pattern, text):
                # –ï—â–µ —Ä–∞–∑ –æ—á–∏—â–∞–µ–º –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ
                text = re.sub(pattern, '', text)
        
        return text.strip()

# –ì–æ—Ç–æ–≤—ã–µ –ø—Ä–æ–º–ø—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
READY_PROMPTS = {
    "news": """üóûÔ∏è –ü–†–û–ú–ü–¢ –î–õ–Ø –ù–û–í–û–°–¢–ï–ô (Copy ‚Üí Paste –≤ ChatGPT):

–¢—ã —Ä–µ–¥–∞–∫—Ç–æ—Ä –∫—Ä–∏–ø—Ç–æ-–∫–∞–Ω–∞–ª–∞ –æ TON/Telegram. –ü–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä—É–π –Ω–æ–≤–æ—Å—Ç—å:

‚úÖ –°–¥–µ–ª–∞–π —Å–µ–Ω—Å–∞—Ü–∏–æ–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å emoji
‚úÖ –£–±–µ—Ä–∏ —Å—Å—ã–ª–∫–∏, —É–ø–æ–º–∏–Ω–∞–Ω–∏—è, —Å–∫–æ–±–∫–∏  
‚úÖ –î–æ–±–∞–≤—å —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
‚úÖ 200-500 —Å–∏–º–≤–æ–ª–æ–≤
‚úÖ –ó–∞–≤–µ—Ä—à–∏: "–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª!"

–¢–ï–ö–°–¢: [–í–°–¢–ê–í–¨ –°–Æ–î–ê –ò–°–•–û–î–ù–´–ô –ü–û–°–¢]""",

    "update": """üîÑ –ü–†–û–ú–ü–¢ –î–õ–Ø –û–ë–ù–û–í–õ–ï–ù–ò–ô (Copy ‚Üí Paste –≤ ChatGPT):

–¢—ã —Ä–µ–¥–∞–∫—Ç–æ—Ä Telegram-–∫–∞–Ω–∞–ª–∞ –æ TON. –ü–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä—É–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:

‚úÖ –ü–æ–¥—á–µ—Ä–∫–Ω–∏ –≤–∞–∂–Ω–æ—Å—Ç—å —É–ª—É—á—à–µ–Ω–∏–π
‚úÖ –£–±–µ—Ä–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏—é  
‚úÖ –î–æ–±–∞–≤—å —ç–Ω—Ç—É–∑–∏–∞–∑–º —Å emoji
‚úÖ 200-500 —Å–∏–º–≤–æ–ª–æ–≤
‚úÖ –ó–∞–≤–µ—Ä—à–∏ CTA –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏

–¢–ï–ö–°–¢: [–í–°–¢–ê–í–¨ –°–Æ–î–ê –ò–°–•–û–î–ù–´–ô –ü–û–°–¢]""",

    "airdrop": """üéÅ –ü–†–û–ú–ü–¢ –î–õ–Ø AIRDROP (Copy ‚Üí Paste –≤ ChatGPT):

–¢—ã —Ä–µ–¥–∞–∫—Ç–æ—Ä –∫—Ä–∏–ø—Ç–æ-–∫–∞–Ω–∞–ª–∞. –ü–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä—É–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑–¥–∞—á–µ:

‚úÖ –°–æ–∑–¥–∞–π –æ—â—É—â–µ–Ω–∏–µ —Å—Ä–æ—á–Ω–æ—Å—Ç–∏
‚úÖ –ü–æ–¥—á–µ—Ä–∫–Ω–∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ—Å—Ç—å –∏ —Ü–µ–Ω–Ω–æ—Å—Ç—å
‚úÖ –£–±–µ—Ä–∏ —Å–ª–æ–∂–Ω—ã–µ —É—Å–ª–æ–≤–∏—è —É—á–∞—Å—Ç–∏—è
‚úÖ 200-400 —Å–∏–º–≤–æ–ª–æ–≤  
‚úÖ –ú–æ—Ç–∏–≤–∏—Ä—É–π –∫ –¥–µ–π—Å—Ç–≤–∏—é

–¢–ï–ö–°–¢: [–í–°–¢–ê–í–¨ –°–Æ–î–ê –ò–°–•–û–î–ù–´–ô –ü–û–°–¢]""",

    "analysis": """üìä –ü–†–û–ú–ü–¢ –î–õ–Ø –ê–ù–ê–õ–ò–¢–ò–ö–ò (Copy ‚Üí Paste –≤ ChatGPT):

–¢—ã –∞–Ω–∞–ª–∏—Ç–∏–∫ –∫—Ä–∏–ø—Ç–æ-—Ä—ã–Ω–∫–∞. –ü–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä—É–π –¥–∞–Ω–Ω—ã–µ:

‚úÖ –°–¥–µ–ª–∞–π –∞–∫—Ü–µ–Ω—Ç –Ω–∞ –≤–∞–∂–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
‚úÖ –£–ø—Ä–æ—Å—Ç–∏ —Å–ª–æ–∂–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
‚úÖ –î–æ–±–∞–≤—å —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–µ –º–Ω–µ–Ω–∏–µ
‚úÖ 300-600 —Å–∏–º–≤–æ–ª–æ–≤
‚úÖ –ü—Ä–∏–∑–æ–≤–∏ —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Ç—Ä–µ–Ω–¥–∞–º–∏

–¢–ï–ö–°–¢: [–í–°–¢–ê–í–¨ –°–Æ–î–ê –ò–°–•–û–î–ù–´–ô –ü–û–°–¢]"""
}

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
chatgpt_rewriter = ChatGPTRewriter()

async def rewrite_post_with_ai(original_text: str, use_chatgpt: bool = True) -> str:
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä–æ–≤–∞–Ω–∏—è —Å AI
    
    Args:
        original_text: –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
        use_chatgpt: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ChatGPT API (True) –∏–ª–∏ –ª–æ–∫–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É (False)
    
    Returns:
        –ü–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç
    """
    if use_chatgpt and config.OPENAI_API_KEY:
        # –ü—Ä–æ–±—É–µ–º ChatGPT
        result = await chatgpt_rewriter.rewrite_with_chatgpt(original_text)
        if result:
            return result
        else:
            logger.warning("ChatGPT –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É")
    
    # Fallback –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É
    from content_rewriter import rewrite_post
    return rewrite_post(original_text)

def get_manual_rewrite_prompt(original_text: str, content_type: str = "auto") -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≥–æ—Ç–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ ChatGPT"""
    
    if content_type == "auto":
        content_type = chatgpt_rewriter._detect_content_type(original_text)
    
    return chatgpt_rewriter.get_copyable_prompt(original_text, content_type) 
